
### **Step 1 Complete** (Docker image ready for Kubernetes deployment)

---

### **Step 2: Cluster Provisioning with kind (setup-cluster.sh)**  
I will create a **3-node kind cluster** (1 control-plane + 2 workers).

**`setup-cluster.sh`**
```bash
#!/bin/bash
set -e

# Install kind if not present
if ! command -v kind &> /dev/null
then
    echo "Installing kind..."
    curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.22.0/kind-linux-amd64
    chmod +x ./kind
    sudo mv ./kind /usr/local/bin/kind
fi

# Install kubectl if not present
if ! command -v kubectl &> /dev/null
then
    echo "Installing kubectl..."
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    chmod +x kubectl
    sudo mv kubectl /usr/local/bin/
fi

# Create kind cluster config
cat <<EOF > kind-config.yaml
kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
- role: worker
- role: worker
EOF

# Create cluster (idempotent)
if ! kind get clusters | grep -q "dev-cluster"; then
    echo "Creating cluster..."
    kind create cluster --name dev-cluster --config kind-config.yaml
else
    echo "Cluster already exists. Skipping creation."
fi

# Verify cluster
kubectl get nodes

